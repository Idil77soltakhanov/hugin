configuration:
  model_path: "/path/to/save/model/{name}"
data_source: !!python/object/apply:hugin.io.FileSystemLoader
  kwds:
    data_pattern: '(?P<category>[0-9A-Za-z_]+)_AOI_(?P<location_id>[0-9])_(?P<location>[A-Za-z]+)_(?P<type>[A-Za-z-]+)_(img|chip)(?P<idx>[0-9]+)(?P<extension>(tif|tiff|geojson))$'
    id_format: '{location}_{idx}'
    type_format: '{type}'
    input_source: '/path/to/spacenet/dataset/directory/'
    dynamic_types:
      GENERATED_GTI: !!python/object/apply:hugin.preprocessing.rasterize.RasterFromShapesGenerator
        kwds:
          base_component: 'RGB-PanSharpen'
          shape_input: 'GT'
          growth_factor: 0.00002
    persist_file: '/tmp/hugin-spacenet-cache.yaml'
    validation_percent: 0.2
    randomise: True

trainer: !!python/object/apply:hugin.engine.scene.RasterSceneTrainer
  kwds:
    name: spacenet_vegas
    stride_size: 100
    window_size: [256, 256]
    model: !!python/object/apply:hugin.engine.keras.KerasModel
      kwds:
        name: spacenet_vegas_unetv14_dice
        model_path: "/path/for/model/output/{name}"
        model_builder: hugin.models.unet.unetv14:unet_v14
        batch_size: 20
        epochs: 10
        metrics:
          - accuracy
          - !!python/name:hugin.tools.utils.dice_coef
          - !!python/name:hugin.tools.utils.jaccard_coef
        loss: categorical_crossentropy
        checkpoint:
          monitor: val_loss
        num_gpus: 1
        optimizer: !!python/object/apply:keras.optimizers.Adam
          kwds:
            lr: !!float 0.0001
            beta_1: !!float 0.9
            beta_2: !!float 0.999
            epsilon: !!float 1e-8
        callbacks:
          - !!python/object/apply:keras.callbacks.EarlyStopping
            kwds:
              monitor: 'val_dice_coef'
              min_delta: 0
              patience: 40
              verbose: 1
              mode: 'auto'
              baseline: None
              restore_best_weights: False
    mapping:
      inputs:
        input_1:
          primary: True
          channels:
            - [ "RGB-PanSharpen", 1 ]
            - [ "RGB-PanSharpen", 2 ]
            - [ "RGB-PanSharpen", 3 ]
      target:
        output_1:
          window_shape: [256, 256]
          stride: 100
          channels:
            - [ "GENERATED_GTI", 1 ]
          preprocessing:
            - !!python/object/apply:hugin.io.loader.BinaryCategoricalConverter
              kwds:
                do_categorical: False
